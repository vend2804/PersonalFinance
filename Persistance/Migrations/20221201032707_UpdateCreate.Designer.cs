// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221201032707_UpdateCreate")]
    partial class UpdateCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Domain.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("Venue")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Domain.Category", b =>
                {
                    b.Property<int>("Cat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cat_Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cat_Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Created_By")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Entry_Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("Cat_Id");

                    b.ToTable("Category_Details");
                });

            modelBuilder.Entity("Domain.Expense", b =>
                {
                    b.Property<int>("Exp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Exp_Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("Exp_By")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Exp_Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Exp_Desc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Exp_Month_Year")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Finalized")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Item_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Exp_Id");

                    b.HasIndex("Item_Id");

                    b.ToTable("Expense_Details");
                });

            modelBuilder.Entity("Domain.Item", b =>
                {
                    b.Property<int>("Item_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cat_Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Created_By")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Entry_Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Item_Desc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Item_Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Item_Id");

                    b.HasIndex("Cat_Id");

                    b.ToTable("Item_Details");
                });

            modelBuilder.Entity("Domain.Revenue", b =>
                {
                    b.Property<int>("Rev_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Finalized")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Item_Id")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Rev_Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rev_By")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Rev_Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rev_Desc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rev_Month_Year")
                        .HasColumnType("TEXT");

                    b.HasKey("Rev_Id");

                    b.HasIndex("Item_Id");

                    b.ToTable("Revenue_Details");
                });

            modelBuilder.Entity("Domain.Expense", b =>
                {
                    b.HasOne("Domain.Item", "Item")
                        .WithMany()
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Domain.Item", b =>
                {
                    b.HasOne("Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Cat_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Revenue", b =>
                {
                    b.HasOne("Domain.Item", "Item")
                        .WithMany()
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
